# –•–æ–¥ –∫–æ—Ä–æ–ª—è üå∂Ô∏è

"""
–î–∞–Ω—ã –¥–≤–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–ª–µ—Ç–∫–∏ —à–∞—Ö–º–∞—Ç–Ω–æ–π –¥–æ—Å–∫–∏. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É,
 –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –∫–æ—Ä–æ–ª—å –ø–æ–ø–∞—Å—Ç—å —Å –ø–µ—Ä–≤–æ–π –∫–ª–µ—Ç–∫–∏ –Ω–∞ –≤—Ç–æ—Ä—É—é –æ–¥–Ω–∏–º —Ö–æ–¥–æ–º.
  –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —á–µ—Ç—ã—Ä–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 8 –∫–∞–∂–¥–æ–µ, –∑–∞–¥–∞—é—â–∏–µ –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ –∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ —Å–Ω–∞—á–∞–ª–∞ –¥–ª—è –ø–µ—Ä–≤–æ–π –∫–ª–µ—Ç–∫–∏,
  –ø–æ—Ç–æ–º –¥–ª—è –≤—Ç–æ—Ä–æ–π –∫–ª–µ—Ç–∫–∏. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ ¬´YES¬ª, –µ—Å–ª–∏ –∏–∑ –ø–µ—Ä–≤–æ–π –∫–ª–µ—Ç–∫–∏ —Ö–æ–¥–æ–º –∫–æ—Ä–æ–ª—è –º–æ–∂–Ω–æ –ø–æ–ø–∞—Å—Ç—å –≤–æ –≤—Ç–æ—Ä—É—é, –∏–ª–∏ ¬´NO¬ª –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —á–µ—Ç—ã—Ä–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 8.
"""

# num1 = int(input())
# num2 = int(input())
# num3 = int(input())
# num4 = int(input())


"""
num1 = 1
num2 = 8
num3 = 8
num4 = 1

ceil_1 = (1 <= num1 <= 8) and (1 <= num2 <= 8)
ceil_2 = (1 <= num3 <= 8) and (1 <= num4 <= 8)

correct_1 = num1 + 1 == num3
correct_2 = num2 + 1 == num4
correct_passed = correct_1 and correct_2

column_test = num1 == num3 - 1  # or num1 > num3 - 1  # —Å—Ç–æ–ª–±–µ—Ü
line_test = num2 == num4 - 1  # —Å—Ç—Ä–æ–∫–∞

vertical_position_up_right = (num2 > num4) and (num1 < num3)
vertical_position_down_right = (num4 > num2) and (num1 < num3)

vertical_position_up_left = (num2 > num4) and (num1 > num3)
vertical_position_down_left = (num4 > num2) and (num1 > num3)

position_passed = vertical_position_up_right \
                  or vertical_position_down_right \
                  or vertical_position_up_left \
                  or vertical_position_down_left

# column , line?
if  (position_passed) and (ceil_1 and ceil_2) :
    print('YES')
else:
    print('NO')


print('ceil_1', ceil_1)
print('ceil_2', ceil_2)
"""

lst = [int(input()) for _ in range(4)]
print('YES' if -1 <= lst[0] - lst[2] <= 1 and -1 <= lst[1] - lst[3] <= 1 else 'NO')
